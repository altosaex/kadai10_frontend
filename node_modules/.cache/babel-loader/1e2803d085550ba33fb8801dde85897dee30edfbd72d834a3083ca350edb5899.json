{"ast":null,"code":"var _jsxFileName = \"/Users/altosaex/Desktop/sns_susumidasu/frontend/src/state/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { Children, createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態の定義\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  user: null,\n  //ログインしてないですね。\n  user: {\n    _id: \"62301ab54ded0ed0584598e4\",\n    username: \"altosaex\",\n    email: \"sae.coach@gmail.com\",\n    password: \"Y6jxkVHT9\",\n    profilePicture: \"/person/1.jpg\",\n    coverPicture: \"\",\n    followers: [],\n    followings: [],\n    isAdmin: false\n  },\n  isFetching: false,\n  //ログインしようともしてないですね。\n  error: false //エラーも吐いてないですね。\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  //ユーザー入力によって状態(state)が更新され、それをグローバルに利用している。\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //set user data in localstroge\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["Children","createContext","useEffect","useReducer","AuthReducer","jsxDEV","_jsxDEV","initialState","user","_id","username","email","password","profilePicture","coverPicture","followers","followings","isAdmin","isFetching","error","AuthContext","AuthContextProvider","children","_s","state","dispatch","localStorage","setItem","JSON","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/altosaex/Desktop/sns_susumidasu/frontend/src/state/AuthContext.js"],"sourcesContent":["import { Children, createContext, useEffect, useReducer } from \"react\";\nimport AuthReducer from \"./AuthReducer\";\n\n//最初のユーザー状態の定義\nconst initialState = {\n\t// user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  user: null, //ログインしてないですね。\n  user: {\n    _id: \"62301ab54ded0ed0584598e4\",\n    username: \"altosaex\",\n    email: \"sae.coach@gmail.com\",\n    password: \"Y6jxkVHT9\",\n    profilePicture: \"/person/1.jpg\",\n    coverPicture: \"\",\n    followers: [],\n    followings: [],\n    isAdmin: false,\n  },\n  isFetching: false, //ログインしようともしてないですね。\n  error: false, //エラーも吐いてないですね。\n};\n\nexport const AuthContext = createContext(initialState);\n\nexport const AuthContextProvider = ({ children }) => {\n  //ユーザー入力によって状態(state)が更新され、それをグローバルに利用している。\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //set user data in localstroge\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACpB;EACCC,IAAI,EAAE,IAAI;EAAE;EACZA,IAAI,EAAE;IACJC,GAAG,EAAE,0BAA0B;IAC/BC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,qBAAqB;IAC5BC,QAAQ,EAAE,WAAW;IACrBC,cAAc,EAAE,eAAe;IAC/BC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE;EACX,CAAC;EACDC,UAAU,EAAE,KAAK;EAAE;EACnBC,KAAK,EAAE,KAAK,CAAE;AAChB,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGnB,aAAa,CAACM,YAAY,CAAC;AAEtD,OAAO,MAAMc,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,UAAU,CAACC,WAAW,EAAEG,YAAY,CAAC;;EAE/D;EACAL,SAAS,CAAC,MAAM;IACdwB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAAChB,IAAI,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACgB,KAAK,CAAChB,IAAI,CAAC,CAAC;EAEhB,oBACEF,OAAA,CAACc,WAAW,CAACU,QAAQ;IACnBC,KAAK,EAAE;MACLvB,IAAI,EAAEgB,KAAK,CAAChB,IAAI;MAChBU,UAAU,EAAEM,KAAK,CAACN,UAAU;MAC5BC,KAAK,EAAEK,KAAK,CAACL,KAAK;MAClBM;IACF,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CArBWF,mBAAmB;AAAAe,EAAA,GAAnBf,mBAAmB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}